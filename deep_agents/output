{'messages':
[HumanMessage(content='what is langgraph?', additional_kwargs={}, response_metadata={}, id='4b7e44e9-08e3-449b-ae36-ec79bd8ca461'),
AIMessage(content=[
{'text': "I'll research LangGraph for you to provide you with comprehensive information about what it is and how it works.", 'type': 'text'},
 {'id': 'toolu_01Noq94GeDYVvRSMbxdHYAiV',
 'input': {'query': 'LangGraph what is it framework library', 'max_results': 5},
 'name': 'internet_search', 'type': 'tool_use'}], additional_kwargs={},
 response_metadata={'id': 'msg_018JHvTLkBtd3GZqQd6thMKn', 'model': 'claude-sonnet-4-20250514',
 'stop_reason': 'tool_use', 'stop_sequence': None,
 'usage': {
    'cache_creation_input_tokens': 0,
    'cache_read_input_tokens': 0,
     'input_tokens': 5030, 'output_tokens': 103, 'server_tool_use': None, 'service_tier': 'standard'},
     'model_name': 'claude-sonnet-4-20250514'}, id='run--026acf2e-3bad-48a2-911e-4e728a403d87-0',
     tool_calls=[{'name': 'internet_search', 'args': {'query': 'LangGraph what is it framework library', 'max_results': 5}, 'id': 'toolu_01Noq94GeDYVvRSMbxdHYAiV', 'type': 'tool_call'}], usage_metadata={'input_tokens': 5030, 'output_tokens': 103, 'total_tokens': 5133, 'input_token_details': {'cache_read': 0, 'cache_creation': 0}}), ToolMessage(content='{"query": "LangGraph what is it framework library", "follow_up_questions": null, "answer": null, "images": [], "results": [{"url": "https://www.datacamp.com/tutorial/langgraph-tutorial", "title": "LangGraph Tutorial: What Is LangGraph and How to Use It?", "content": "LangGraph is a library within the LangChain ecosystem that provides a framework for defining, coordinating, and executing multiple LLM agents (or chains) in a structured and efficient manner. By managing the flow of data and the sequence of operations, LangGraph allows developers to focus on the high-level logic of their applications rather than the intricacies of agent coordination. Whether you need a chatbot that can handle various types of user requests or a multi-agent system that performs complex tasks, LangGraph provides the tools to build exactly what you need. LangGraph significantly simplifies the development of complex LLM applications by providing a structured framework for managing state and coordinating agent interactions.", "score": 0.92359936, "raw_content": null}, {"url": "https://www.ibm.com/think/topics/langgraph", "title": "What is LangGraph? - IBM", "content": "LangGraph, created by LangChain, is an open source AI agent framework designed to build, deploy and manage complex generative AI agent workflows. At its core, LangGraph uses the power of graph-based architectures to model and manage the intricate relationships between various components of an AI agent workflow. LangGraph illuminates the processes within an AI workflow, allowing full transparency of the agent’s state. By combining these technologies with a set of APIs and tools, LangGraph provides users with a versatile platform for developing AI solutions and workflows including chatbots, state graphs and other agent-based systems. Nodes: In LangGraph, nodes represent individual components or agents within an AI workflow. LangGraph uses enhanced decision-making by modeling complex relationships between nodes, which means it uses AI agents to analyze their past actions and feedback.", "score": 0.8740022, "raw_content": null}, {"url": "https://langchain-ai.github.io/langgraph/", "title": "LangGraph - GitHub Pages", "content": "LangGraph Our Building Ambient Agents with LangGraph course is now available on LangChain Academy! LangGraph  LangGraph  LangGraph Trusted by companies shaping the future of agents – including Klarna, Replit, Elastic, and more – LangGraph is a low-level orchestration framework for building, managing, and deploying long-running, stateful agents. from langgraph.prebuilt import create_react_agent Or, to learn how to build an agent workflow with a customizable architecture, long-term memory, and other complex task handling, see the LangGraph basics tutorials. LangGraph provides low-level supporting infrastructure for _any_ long-running, stateful workflow or agent. While LangGraph can be used standalone, it also integrates seamlessly with any LangChain product, giving developers a full suite of tools for building agents. *   LangGraph Platform — Deploy and scale agents effortlessly with a purpose-built deployment platform for long running, stateful workflows.", "score": 0.82082915, "raw_content": null}, {"url": "https://medium.com/@ken_lin/langgraph-a-framework-for-building-stateful-multi-agent-llm-applications-a51d5eb68d03", "title": "LangGraph: A Framework for Building Stateful Multi-Agent LLM ...", "content": "LangGraph: A Framework for Building Stateful Multi-Agent LLM Applications | by Ken Lin | Medium **LangGraph: A Framework for Building Stateful Multi-Agent LLM Applications** For straightforward applications that don’t require cyclical workflows or multi-agent coordination, LangGraph may introduce unnecessary complexity. LangGraph represents a significant advancement in the toolkit available for developing sophisticated LLM applications, particularly those involving agent-like behaviors and multi-agent coordination. For organizations and developers looking to build complex agent systems or applications requiring stateful, iterative processing, LangGraph provides a robust foundation that can significantly reduce development time and improve system quality. Image 19: The Complete Guide to Building Your First AI Agent with LangGraph. Image 21: Building AI Agents from scratch using LangGraph and Ollama: Part 1 Image 23: Building Multi-Agent Systems with LangGraph", "score": 0.7325349, "raw_content": null}, {"url": "https://www.langchain.com/langgraph", "title": "LangGraph - LangChain", "content": "Design agent-driven user experiences with LangGraph Platform\'s APIs. Quickly deploy and scale your application with infrastructure built for agents. LangGraph sets the foundation for how we can build and scale AI workloads — from conversational agents, complex task automation, to custom LLM-backed experiences that \'just work\'. The next chapter in building complex production-ready features with LLMs is agentic, and with LangGraph and LangSmith, LangChain delivers an out-of-the-box solution to iterate quickly, debug immediately, and scale effortlessly.” LangGraph sets the foundation for how we can build and scale AI workloads — from conversational agents, complex task automation, to custom LLM-backed experiences that \'just work\'. LangGraph Platform is a service for deploying and scaling LangGraph applications, with an opinionated API for building agent UXs, plus an integrated developer studio.", "score": 0.55912215, "raw_content": null}], "response_time": 0.86}', name='internet_search', id='834cda9c-920d-414b-9c69-4f174be1bfca', tool_call_id='toolu_01Noq94GeDYVvRSMbxdHYAiV'), AIMessage(content=[{'id': 'toolu_01QbUFsdLYjGUG1DrE556Fbo', 'input': {'query': 'LangGraph key features architecture stateful agents workflow', 'max_results': 5}, 'name': 'internet_search', 'type': 'tool_use'}], additional_kwargs={}, response_metadata={'id': 'msg_01AkLdNwXLiyP5NA2uE4a7mq', 'model': 'claude-sonnet-4-20250514', 'stop_reason': 'tool_use', 'stop_sequence': None, 'usage': {'cache_creation_input_tokens': 0, 'cache_read_input_tokens': 0, 'input_tokens': 6443, 'output_tokens': 81, 'server_tool_use': None, 'service_tier': 'standard'}, 'model_name': 'claude-sonnet-4-20250514'}, id='run--e5ce775f-07d2-49ca-a90f-51768edc9e47-0', tool_calls=[{'name': 'internet_search', 'args': {'query': 'LangGraph key features architecture stateful agents workflow', 'max_results': 5}, 'id': 'toolu_01QbUFsdLYjGUG1DrE556Fbo', 'type': 'tool_call'}], usage_metadata={'input_tokens': 6443, 'output_tokens': 81, 'total_tokens': 6524, 'input_token_details': {'cache_read': 0, 'cache_creation': 0}}), ToolMessage(content='{"query": "LangGraph key features architecture stateful agents workflow", "follow_up_questions": null, "answer": null, "images": [], "results": [{"url": "https://langchain-ai.github.io/langgraph/", "title": "LangGraph - GitHub Pages", "content": "LangGraph Our Building Ambient Agents with LangGraph course is now available on LangChain Academy! LangGraph  LangGraph  LangGraph Trusted by companies shaping the future of agents – including Klarna, Replit, Elastic, and more – LangGraph is a low-level orchestration framework for building, managing, and deploying long-running, stateful agents. from langgraph.prebuilt import create_react_agent Or, to learn how to build an agent workflow with a customizable architecture, long-term memory, and other complex task handling, see the LangGraph basics tutorials. LangGraph provides low-level supporting infrastructure for _any_ long-running, stateful workflow or agent. While LangGraph can be used standalone, it also integrates seamlessly with any LangChain product, giving developers a full suite of tools for building agents. *   LangGraph Platform — Deploy and scale agents effortlessly with a purpose-built deployment platform for long running, stateful workflows.", "score": 0.8201387, "raw_content": null}, {"url": "https://medium.com/@ken_lin/langgraph-a-framework-for-building-stateful-multi-agent-llm-applications-a51d5eb68d03", "title": "LangGraph: A Framework for Building Stateful Multi-Agent LLM ...", "content": "LangGraph: A Framework for Building Stateful Multi-Agent LLM Applications | by Ken Lin | Medium **LangGraph: A Framework for Building Stateful Multi-Agent LLM Applications** For straightforward applications that don’t require cyclical workflows or multi-agent coordination, LangGraph may introduce unnecessary complexity. LangGraph represents a significant advancement in the toolkit available for developing sophisticated LLM applications, particularly those involving agent-like behaviors and multi-agent coordination. For organizations and developers looking to build complex agent systems or applications requiring stateful, iterative processing, LangGraph provides a robust foundation that can significantly reduce development time and improve system quality. Image 19: The Complete Guide to Building Your First AI Agent with LangGraph. Image 21: Building AI Agents from scratch using LangGraph and Ollama: Part 1 Image 23: Building Multi-Agent Systems with LangGraph", "score": 0.6811549, "raw_content": null}, {"url": "https://activewizards.com/blog/mastering-langgraph-a-guide-to-stateful-ai-workflows", "title": "Mastering LangGraph: A Guide to Stateful AI Workflows", "content": "The definitive guide to LangGraph. Learn to build advanced, stateful, and cyclical AI workflows with agents.", "score": 0.64826655, "raw_content": null}, {"url": "https://medium.com/@kevinnjagi83/langgraph-building-stateful-multi-ai-agents-b8427238da91", "title": "LangGraph: Building Stateful AI Agents | by Kevinnjagi | Medium", "content": "LangGraph: Building Stateful AI Agents | by Kevinnjagi | Medium LangGraph: Building Stateful AI Agents Whether you’re building a chatbot, interactive system, or decision-making process, LangGraph lets you focus on the logic, without worrying about managing state transitions manually. In this project, we integrate LangGraph with the Groq model to build a conversational chatbot. The chatbot processes user inputs, interacts with the Groq model, and returns structured responses. chatbot: The function takes the current state as input, extracts the messages, and sends them to the Groq model using the invoke method. By modeling the conversation flow as a state graph, LangGraph simplifies the process of managing user inputs and generating responses.", "score": 0.61251885, "raw_content": null}, {"url": "https://www.langchain.com/langgraph", "title": "LangGraph - LangChain", "content": "Design agent-driven user experiences with LangGraph Platform\'s APIs. Quickly deploy and scale your application with infrastructure built for agents. LangGraph sets the foundation for how we can build and scale AI workloads — from conversational agents, complex task automation, to custom LLM-backed experiences that \'just work\'. The next chapter in building complex production-ready features with LLMs is agentic, and with LangGraph and LangSmith, LangChain delivers an out-of-the-box solution to iterate quickly, debug immediately, and scale effortlessly.” LangGraph sets the foundation for how we can build and scale AI workloads — from conversational agents, complex task automation, to custom LLM-backed experiences that \'just work\'. LangGraph Platform is a service for deploying and scaling LangGraph applications, with an opinionated API for building agent UXs, plus an integrated developer studio.", "score": 0.49685127, "raw_content": null}], "response_time": 1.16}', name='internet_search', id='20764dee-beb4-4cc7-9d6e-98ee244d67d2', tool_call_id='toolu_01QbUFsdLYjGUG1DrE556Fbo'), AIMessage(content=[{'id': 'toolu_01HJA4BKPtqRiJmjAPvez9kw', 'input': {'query': 'LangGraph vs LangChain difference comparison graph-based architecture', 'max_results': 3}, 'name': 'internet_search', 'type': 'tool_use'}], additional_kwargs={}, response_metadata={'id': 'msg_01M3P2FiUv98jyRdyQHpUqBL', 'model': 'claude-sonnet-4-20250514', 'stop_reason': 'tool_use', 'stop_sequence': None, 'usage': {'cache_creation_input_tokens': 0, 'cache_read_input_tokens': 0, 'input_tokens': 7749, 'output_tokens': 85, 'server_tool_use': None, 'service_tier': 'standard'}, 'model_name': 'claude-sonnet-4-20250514'}, id='run--5f82ea95-598f-4b47-80dd-a6985817f82c-0', tool_calls=[{'name': 'internet_search', 'args': {'query': 'LangGraph vs LangChain difference comparison graph-based architecture', 'max_results': 3}, 'id': 'toolu_01HJA4BKPtqRiJmjAPvez9kw', 'type': 'tool_call'}], usage_metadata={'input_tokens': 7749, 'output_tokens': 85, 'total_tokens': 7834, 'input_token_details': {'cache_read': 0, 'cache_creation': 0}}), ToolMessage(content='{"query": "LangGraph vs LangChain difference comparison graph-based architecture", "follow_up_questions": null, "answer": null, "images": [], "results": [{"url": "https://duplocloud.com/langchain-vs-langgraph/", "title": "LangChain vs. LangGraph: A Developer\'s Guide to Choosing Your ...", "content": "Key Difference: LangChain uses a linear, chain-based architecture (DAGs) for sequential tasks. LangGraph embraces a graph-based architecture with nodes and edges, supporting cyclical and dynamic workflows.", "score": 0.93666285, "raw_content": null}, {"url": "https://medium.com/@tahirbalarabe2/%EF%B8%8Flangchain-vs-langgraph-a-comparative-analysis-ce7749a80d9c", "title": "LangChain vs. LangGraph: A Comparative Analysis | by Tahir", "content": "If you’re building applications with large language models, you’ll likely come across two frameworks: LangChain and LangGraph. Whether you’re chaining operations or navigating complex workflows, LangChain and LangGraph give you the tools to build something great. While LangChain focuses on chaining LLM operations in a specific sequence, LangGraph is primarily designed for creating stateful, multi-agent systems. 8. If an application needs to remember past interactions and use that information in the future, which framework, LangChain or LangGraph, would be better and why? While LangChain can pass data through the chain, it doesn’t have a persistent state feature, making it less suitable for applications requiring memory across multiple runs or dynamic workflow adjustments based on past interactions.", "score": 0.82048416, "raw_content": null}, {"url": "https://www.youtube.com/watch?v=qAF1NjEVHhY", "title": "LangChain vs LangGraph: A Tale of Two Frameworks - YouTube", "content": "LangChain vs LangGraph: A Tale of Two Frameworks\\n\\nIBM Technology\\n5597 likes\\n238518 views\\n4 Nov 2024\\nWant to learn more about AI agents and assistants? Register for Virtual Agents Day here → https://ibm.biz/BdaAVa\\nDownload the AI model guide to learn more\xa0→\xa0https://ibm.biz/Bdab9w\\nLearn more about AI solutions\xa0→ https://ibm.biz/Bdab9k\\n\\nGet ready for a showdown between LangChain and LangGraph, two powerful frameworks for building applications with large language models (LLMs.) Master Inventor Martin Keen compares the two, taking a look at their unique features, use cases, and how they can help you create innovative, context-aware solutions.\\n\\nAI news moves fast. Sign up for a monthly newsletter for AI updates from IBM → https://ibm.biz/Bdab9t\\n#llm #largelanguagemodels #langchain\\n120 comments", "score": 0.6991933, "raw_content": null}], "response_time": 0.78}', name='internet_search', id='f877a620-e769-4700-9211-8e20ea304925', tool_call_id='toolu_01HJA4BKPtqRiJmjAPvez9kw'), AIMessage(content="Based on my research, I can provide you with a comprehensive explanation of what LangGraph is:\n\n## What is LangGraph?\n\n**LangGraph** is an open-source framework developed by LangChain for building, managing, and deploying complex, stateful AI agent workflows. It's specifically designed to handle multi-agent systems and long-running, stateful applications that involve Large Language Models (LLMs).\n\n## Key Features and Architecture\n\n### Graph-Based Architecture\n- **Nodes and Edges**: LangGraph uses a graph-based architecture where nodes represent individual components or agents, and edges define the flow between them\n- **Cyclical Workflows**: Unlike traditional linear chains, LangGraph supports cyclical and dynamic workflows that can loop back and make decisions based on previous states\n- **State Management**: Provides robust state management capabilities, allowing applications to remember past interactions and use that information in future decisions\n\n### Core Capabilities\n\n1. **Stateful Agents**: Build agents that maintain state across multiple interactions and can remember previous conversations or actions\n\n2. **Multi-Agent Coordination**: Orchestrate multiple AI agents working together in complex workflows\n\n3. **Complex Decision Making**: Agents can analyze their past actions and feedback to make enhanced decisions\n\n4. **Long-Running Workflows**: Designed for applications that need to run continuously and maintain context over time\n\n5. **Transparency**: Provides full visibility into the agent's state and processes, making it easier to debug and understand workflow behavior\n\n## LangGraph vs LangChain\n\nThe key differences are:\n\n- **LangChain**: Uses a linear, chain-based architecture (DAGs) for sequential tasks - good for straightforward, step-by-step operations\n- **LangGraph**: Uses a graph-based architecture supporting cyclical workflows, state management, and complex multi-agent interactions\n\n## Use Cases\n\nLangGraph is ideal for:\n- **Conversational Agents**: Chatbots that need to maintain context across conversations\n- **Complex Task Automation**: Multi-step processes that require decision-making and state tracking\n- **Multi-Agent Systems**: Applications where multiple AI agents need to coordinate and collaborate\n- **Interactive Systems**: Applications requiring dynamic responses based on user interactions and history\n\n## Integration and Deployment\n\n- **LangGraph Platform**: A deployment service for scaling LangGraph applications with APIs for building agent user experiences\n- **LangChain Integration**: Works seamlessly with other LangChain products while also functioning as a standalone framework\n- **Enterprise Ready**: Trusted by companies like Klarna, Replit, and Elastic for production AI workflows\n\n## When to Use LangGraph\n\nChoose LangGraph when you need:\n- Stateful, multi-turn conversations\n- Complex workflows with decision points and loops\n- Multi-agent coordination\n- Long-running processes that maintain context\n- Applications requiring iterative processing and feedback loops\n\nFor simple, sequential LLM operations, traditional LangChain might be more appropriate, but for complex, stateful AI applications, LangGraph provides the necessary infrastructure and tools to build sophisticated agent-based systems.", additional_kwargs={}, response_metadata={'id': 'msg_01Sb5tp3L6w1Vyqa3avMeg4T', 'model': 'claude-sonnet-4-20250514', 'stop_reason': 'end_turn', 'stop_sequence': None, 'usage': {'cache_creation_input_tokens': 0, 'cache_read_input_tokens': 0, 'input_tokens': 8597, 'output_tokens': 675, 'server_tool_use': None, 'service_tier': 'standard'}, 'model_name': 'claude-sonnet-4-20250514'}, id='run--c70e5504-a9f4-4861-a229-8ffaa0858336-0', usage_metadata={'input_tokens': 8597, 'output_tokens': 675, 'total_tokens': 9272, 'input_token_details': {'cache_read': 0, 'cache_creation': 0}})]}
